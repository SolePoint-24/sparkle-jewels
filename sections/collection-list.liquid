{% comment %}
  Section: Collection List Carousel
  - Displays a clean, horizontally scrolling carousel of collections.
  - Ensures all images are the same size.
  - Does not overflow the container.
{% endcomment %}

<div class="collection-list-wrapper color-{{ section.settings.color_scheme }}">
  <div class="page-width">
    {%- if section.settings.title != blank -%}
      <div class="collection-list__header">
        <h2 class="collection-list__title">{{ section.settings.title | escape }}</h2>
        <div class="collection-list__arrows">
          <button type="button" class="collection-arrow prev" aria-label="Previous slide">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="15 18 9 12 15 6"></polyline></svg>
          </button>
          <button type="button" class="collection-arrow next" aria-label="Next slide">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="9 18 15 12 9 6"></polyline></svg>
          </button>
        </div>
      </div>
    {%- endif -%}

    <div class="collection-list__container">
      <div class="collection-list__grid">
        {%- for block in section.blocks -%}
          <div class="collection-list__slide" {{ block.shopify_attributes }}>
            <a href="{{ block.settings.collection.url }}" class="collection-list__card">
              <div class="collection-list__card-image">
                {%- assign collection_image = block.settings.collection.image | default: block.settings.collection.products.first.featured_image -%}
                {%- if collection_image != blank -%}
                  {{ collection_image | image_url: width: 500 | image_tag: loading: 'lazy', widths: '200, 300, 400, 500' }}
                {%- else -%}
                  {{ 'collection-1' | placeholder_svg_tag: 'placeholder-svg' }}
                {%- endif -%}
              </div>
              <p class="collection-list__card-title">{{ block.settings.collection.title | default: "Collection" }}</p>
            </a>
          </div>
        {%- endfor -%}
      </div>
    </div>
  </div>
</div>

<style>
  .collection-list-wrapper {
    padding-top: {{ section.settings.padding_top }}px;
    padding-bottom: {{ section.settings.padding_bottom }}px;
  }
  .collection-list__header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 30px;
  }
  .collection-list__title {
    margin: 0;
  }
  .collection-list__arrows button {
    background: none;
    border: 1px solid #ccc;
    border-radius: 50%;
    width: 36px;
    height: 36px;
    cursor: pointer;
    margin-left: 10px;
    display: flex;
    align-items: center;
    justify-content: center;
  }
  .collection-list__arrows button:hover {
    background-color: #f5f5f5;
  }
  .collection-list__arrows button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
  .collection-list__container {
    position: relative;
    overflow: hidden;
  }
  .collection-list__grid {
    display: flex;
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
    scrollbar-width: none; /* Firefox */
  }
  .collection-list__grid::-webkit-scrollbar {
    display: none; /* Chrome, Safari */
  }
  .collection-list__slide {
    flex: 0 0 100%; /* Mobile default: 1 item */
    scroll-snap-align: start;
    padding: 0 10px;
  }
  .collection-list__card {
    text-decoration: none;
    color: inherit;
    display: block;
  }
  .collection-list__card-image {
    overflow: hidden;
    border-radius: 4px;
    aspect-ratio: {{ section.settings.image_aspect_ratio }};
  }
  .collection-list__card-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }
  .collection-list__card:hover .collection-list__card-image img {
    transform: scale(1.05);
  }
  .collection-list__card-title {
    text-align: center;
    margin-top: 15px;
    padding: 0 10px;
  }
  /* Tablet and Desktop styles */
  @media (min-width: 750px) {
    .collection-list__slide {
      flex-basis: calc(100% / {{ section.settings.columns_desktop }});
    }
  }
  @media (min-width: 550px) and (max-width: 749px) {
    .collection-list__slide {
      flex-basis: 50%; /* 2 items on tablet */
    }
  }
</style>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const section = document.querySelector('#shopify-section-{{ section.id }}');
  const container = section.querySelector('.collection-list__grid');
  const prevButton = section.querySelector('.collection-arrow.prev');
  const nextButton = section.querySelector('.collection-arrow.next');

  if (!container || !prevButton || !nextButton) return;

  const updateArrowState = () => {
    const scrollLeft = Math.round(container.scrollLeft);
    const scrollWidth = container.scrollWidth;
    const clientWidth = container.clientWidth;
    prevButton.disabled = scrollLeft <= 0;
    nextButton.disabled = scrollLeft + clientWidth >= scrollWidth;
  };

  const handleScroll = (direction) => {
    const slideWidth = container.querySelector('.collection-list__slide').clientWidth;
    container.scrollLeft += slideWidth * direction;
    setTimeout(updateArrowState, 400); // Update after scroll animation
  };

  nextButton.addEventListener('click', () => handleScroll(1));
  prevButton.addEventListener('click', () => handleScroll(-1));
  container.addEventListener('scroll', updateArrowState);

  // Initial check in case it loads scrolled
  updateArrowState();
});
</script>

{% schema %}
{
  "name": "Collection Carousel",
  "class": "collection-list-section",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Heading",
      "default": "Collections"
    },
    {
      "type": "select",
      "id": "image_aspect_ratio",
      "label": "Image aspect ratio",
      "options": [
        { "value": "1 / 1", "label": "Square (1:1)" },
        { "value": "4 / 3", "label": "Landscape (4:3)" },
        { "value": "3 / 4", "label": "Portrait (3:4)" }
      ],
      "default": "1 / 1"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 3,
      "max": 7,
      "step": 1,
      "label": "Columns on desktop",
      "default": 6
    },
    {
      "type": "header",
      "content": "Section Spacing"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Top Padding",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Bottom Padding",
      "default": 40
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "Color Scheme"
    }
  ],
  "blocks": [
    {
      "type": "collection",
      "name": "Collection",
      "settings": [
        {
          "type": "collection",
          "id": "collection",
          "label": "Collection"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Collection Carousel",
      "blocks": [
        { "type": "collection" },
        { "type": "collection" },
        { "type": "collection" },
        { "type": "collection" },
        { "type": "collection" },
        { "type": "collection" }
      ]
    }
  ]
}
{% endschema %}