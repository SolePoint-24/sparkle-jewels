{% comment %}
  Section: Collection List Carousel
  - Aligned title with carousel by matching padding.
  - Updated title font style.
{% endcomment %}

<div class="section color-{{ section.settings.color_scheme }}">
  <div class="page-width">
    <div class="collection-list__header">
      {%- for block in section.blocks -%}
        {%- if block.type == 'title' -%}
          <h2 class="collection-list__title" {{ block.shopify_attributes }}>
            {{ block.settings.title | escape }}
          </h2>
        {%- endif -%}
      {%- endfor -%}
    </div>

    <div class="collection-list__container">
      <div class="collection-list__grid">
        {%- for block in section.blocks -%}
          {%- if block.type == 'collection' -%}
            <div class="collection-list__slide" {{ block.shopify_attributes }}>
              <a href="{{ block.settings.collection.url }}" class="collection-list__card">
                <div class="collection-list__card-image">
                  {%- assign collection_image = block.settings.collection.image | default: block.settings.collection.products.first.featured_image -%}
                  {%- if collection_image != blank -%}
                    {{ collection_image | image_url: width: 500 | image_tag: loading: 'lazy', widths: '200, 300, 400, 500' }}
                  {%- else -%}
                    {{ 'collection-1' | placeholder_svg_tag: 'placeholder-svg' }}
                  {%- endif -%}
                </div>
                <p class="collection-list__card-title">{{ block.settings.collection.title | default: "Collection" }}</p>
              </a>
            </div>
          {%- endif -%}
        {%- endfor -%}
      </div>

      <button type="button" class="collection-arrow prev" aria-label="Previous slide">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="15 18 9 12 15 6"></polyline></svg>
      </button>
      <button type="button" class="collection-arrow next" aria-label="Next slide">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="9 18 15 12 9 6"></polyline></svg>
      </button>
    </div>
  </div>
</div>

<style>
  .collection-list-wrapper {
    padding-top: {{ section.settings.padding_top }}px;
    padding-bottom: {{ section.settings.padding_bottom }}px;
  }

  /* --- CHANGED --- Added padding to align with carousel */
  .collection-list__header {
    margin-bottom: 30px;
    padding: 0 40px; /* This aligns the title */
  }

  /* --- CHANGED --- Updated font style to match reference image */
  .collection-list__title {
    margin: 0;
    font-size: 2.2rem;
    font-weight: 400;
    font-family: 'Times New Roman', Times, serif;
  }

  .collection-list__container {
    position: relative;
    padding: 0 40px;
  }
  .collection-arrow {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    background: white;
    border: 1px solid #e0e0e0;
    border-radius: 50%;
    width: 40px;
    height: 40px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0;
    transition: background-color 0.2s ease, border-color 0.2s ease;
    color: #555;
    z-index: 1;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
  }
  .collection-arrow.prev {
    left: -10px; /* Adjusted position */
  }
  .collection-arrow.next {
    right: -10px; /* Adjusted position */
  }
  .collection-arrow:hover {
    background-color: #f0f0f0;
    border-color: #ccc;
  }
  .collection-arrow:disabled {
    opacity: 0.3;
    cursor: not-allowed;
    background-color: white;
    border-color: #e0e0e0;
  }
  .collection-list__grid {
    display: flex;
    overflow-x: auto;
    scroll-snap-type: x mandatory;
    scroll-behavior: smooth;
    -webkit-overflow-scrolling: touch;
    scrollbar-width: none;
  }
  .collection-list__grid::-webkit-scrollbar {
    display: none;
  }
  .collection-list__slide {
    flex: 0 0 100%;
    scroll-snap-align: start;
    padding: 0 10px;
  }
  .collection-list__card {
    text-decoration: none;
    color: inherit;
    display: block;
  }
  .collection-list__card-image {
    overflow: hidden;
    border-radius: 4px;
    aspect-ratio: {{ section.settings.image_aspect_ratio }};
  }
  .collection-list__card-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.3s ease;
  }
  .collection-list__card:hover .collection-list__card-image img {
    transform: scale(1.05);
  }
  .collection-list__card-title {
    text-align: center;
    margin-top: 15px;
    padding: 0 10px;
  }
  @media (min-width: 990px) {
    .collection-list__slide {
      flex-basis: calc(100% / {{ section.settings.columns_desktop }});
    }
  }
  @media (min-width: 750px) and (max-width: 989px) {
    .collection-list__slide {
      flex-basis: 33.33%;
    }
  }
  @media (max-width: 749px) {
    .collection-list__slide {
      flex-basis: 50%;
    }
  }
</style>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const section = document.querySelector('#shopify-section-{{ section.id }}');
  const container = section.querySelector('.collection-list__grid');
  const prevButton = section.querySelector('.collection-arrow.prev');
  const nextButton = section.querySelector('.collection-arrow.next');
  if (!container || !prevButton || !nextButton) return;
  const updateArrowState = () => {
    const scrollLeft = Math.round(container.scrollLeft);
    const scrollWidth = container.scrollWidth;
    const clientWidth = container.clientWidth;
    prevButton.disabled = scrollLeft <= 0;
    nextButton.disabled = scrollLeft + clientWidth >= scrollWidth - 1;
  };
  const handleScroll = (direction) => {
    const slideWidth = container.querySelector('.collection-list__slide').offsetWidth;
    container.scrollTo({ left: container.scrollLeft + (slideWidth * direction), behavior: 'smooth' });
    setTimeout(updateArrowState, 400);
  };
  nextButton.addEventListener('click', () => handleScroll(1));
  prevButton.addEventListener('click', () => handleScroll(-1));
  container.addEventListener('scroll', updateArrowState);
  new ResizeObserver(updateArrowState).observe(container);
  updateArrowState();
});
</script>

{% schema %}
{
  "name": "Collection Carousel",
  "class": "collection-list-section",
  "settings": [
    {
      "type": "select",
      "id": "image_aspect_ratio",
      "label": "Image aspect ratio",
      "options": [
        { "value": "1 / 1", "label": "Square (1:1)" },
        { "value": "4 / 3", "label": "Landscape (4:3)" },
        { "value": "3 / 4", "label": "Portrait (3:4)" }
      ],
      "default": "1 / 1"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 3,
      "max": 7,
      "step": 1,
      "label": "Columns on desktop",
      "default": 5
    },
    {
      "type": "header",
      "content": "Section Spacing"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Top Padding",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 2,
      "unit": "px",
      "label": "Bottom Padding",
      "default": 40
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "Color Scheme"
    }
  ],
  "blocks": [
    {
      "type": "title",
      "name": "Title",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Heading",
          "default": "Explore Jewelry by types"
        }
      ]
    },
    {
      "type": "collection",
      "name": "Collection",
      "settings": [
        {
          "type": "collection",
          "id": "collection",
          "label": "Collection"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Collection Carousel",
      "blocks": [
        {
          "type": "title"
        },
        { "type": "collection" },
        { "type": "collection" },
        { "type": "collection" },
        { "type": "collection" },
        { "type": "collection" },
        { "type": "collection" }
      ]
    }
  ]
}
{% endschema %}