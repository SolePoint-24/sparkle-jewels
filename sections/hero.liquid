{% comment %}
  This section creates a full-screen hero banner with an interactive collection carousel.
  - Each slide has its own unique content (heading, text, button) and background image.
  - The carousel supports autoplay with play/pause controls.
{% endcomment %}

<div
  id="Hero-{{ section.id }}"
  class="hero-carousel-section color-{{ section.settings.color_scheme }}"
  style="--section-height-desktop: {{ section.settings.section_height_desktop }}vh; --section-height-mobile: {{ section.settings.section_height_mobile }}vh;"
  data-section-id="{{ section.id }}"
  data-autoplay="{{ section.settings.autoplay }}"
  data-autoplay-speed="{{ section.settings.autoplay_speed }}"
>
  <div class="hero-carousel__media-container">
    {%- for block in section.blocks -%}
      {%- if block.type == 'collection_slide' -%}
        {%- assign collection = block.settings.collection -%}

        {%- assign slide_image = '' -%}
        {%- if block.settings.image != blank -%}
          {%- assign slide_image = block.settings.image -%}
        {%- elsif collection.image != blank -%}
          {%- assign slide_image = collection.image -%}
        {%- elsif collection.products.first.featured_image != blank -%}
          {%- assign slide_image = collection.products.first.featured_image -%}
        {%- endif -%}

        {% if slide_image != blank %}
          {%- assign loading_attr = 'lazy' -%}
          {%- assign fetch_priority_attr = 'auto' -%}
          {%- assign image_class = 'hero-carousel__media-image' -%}
          {%- if forloop.first -%}
            {%- assign loading_attr = 'eager' -%}
            {%- assign fetch_priority_attr = 'high' -%}
            {%- assign image_class = 'hero-carousel__media-image is-active' -%}
          {%- endif -%}

          {%- assign handle_attr = collection.handle | default: block.id -%}

          {{
            slide_image
            | image_url: width: 3840
            | image_tag:
              loading: loading_attr,
              fetchpriority: fetch_priority_attr,
              class: image_class,
              data-collection-handle: handle_attr
          }}
        {% else %}
          <div class="hero-carousel__media-image placeholder-wrapper{% if forloop.first %} is-active{% endif %}" data-collection-handle="{{ collection.handle | default: block.id }}">
            {{ 'lifestyle-2' | placeholder_svg_tag: 'placeholder-svg' }}
          </div>
        {% endif %}
      {%- endif -%}
    {%- endfor -%}
  </div>

  <div class="hero-carousel__content-container">
    {%- for block in section.blocks -%}
      {%- if block.type == 'collection_slide' -%}
        {%- assign collection = block.settings.collection -%}
        <div
          class="hero-carousel__content-inner{% if forloop.first %} is-active{% endif %}"
          data-collection-handle="{{ collection.handle | default: block.id }}"
          {{ block.shopify_attributes }}
        >
          {%- if block.settings.subheading != blank -%}
            <p class="hero-carousel__subheading">{{ block.settings.subheading | escape }}</p>
          {%- endif -%}
          {%- if block.settings.heading != blank -%}
            <h2 class="hero-carousel__heading">{{ block.settings.heading | escape }}</h2>
          {%- endif -%}
          {%- if block.settings.text != blank -%}
            <p class="hero-carousel__text">{{ block.settings.text | escape }}</p>
          {%- endif -%}
          {%- if block.settings.button_label != blank -%}
            <a href="{{ block.settings.button_link | default: collection.url }}" class="button hero-carousel__button">
              {{ block.settings.button_label | escape }}
            </a>
          {%- endif -%}
        </div>
      {%- endif -%}
    {%- endfor -%}
  </div>

  {% comment %}
    Navigation controls will only appear if there are 2 or more slides.
  {% endcomment %}
  {%- assign collection_slides = section.blocks | where: 'type', 'collection_slide' -%}
  {%- if collection_slides.size > 1 -%}
    <div class="hero-carousel__nav-wrapper">
      <div class="hero-carousel__nav">
        <button type="button" class="hero-carousel__arrow hero-carousel__arrow--prev" aria-label="Previous slide">
          <svg viewBox="0 0 8 12"><path d="M7 11L1 6L7 1" stroke="currentColor" stroke-width="1.5" fill="none" stroke-linecap="round" stroke-linejoin="round"/></svg>
        </button>
        <div class="hero-carousel__titles">
          {%- for block in collection_slides -%}
            {%- assign collection = block.settings.collection -%}
            <a
              href="{{ collection.url }}"
              class="hero-carousel__title-link {% if forloop.first %}is-active{% endif %}"
              data-collection-handle="{{ collection.handle | default: block.id }}"
            >
              {{ collection.title | default: 'Slide' }}
            </a>
          {%- endfor -%}
        </div>
        <button type="button" class="hero-carousel__arrow hero-carousel__arrow--next" aria-label="Next slide">
          <svg viewBox="0 0 8 12"><path d="M1 11L7 6L1 1" stroke="currentColor" stroke-width="1.5" fill="none" stroke-linecap="round" stroke-linejoin="round"/></svg>
        </button>
        <button type="button" class="hero-carousel__play-pause" aria-label="Pause autoplay">
          <svg class="icon-pause" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M4.5 1.5V10.5M7.5 1.5V10.5" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"/></svg>
          <svg class="icon-play" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M2.5 10.5V1.5L9.5 6L2.5 10.5Z" stroke="currentColor" stroke-width="1.5" stroke-linejoin="round"/></svg>
        </button>
      </div>
    </div>
  {%- endif -%}
</div>

<script>
  class HeroCarousel {
    constructor(section) {
      this.section = section;
      this.links = this.section.querySelectorAll('.hero-carousel__title-link');
      this.images = this.section.querySelectorAll('.hero-carousel__media-image');
      this.contents = this.section.querySelectorAll('.hero-carousel__content-inner');
      this.prevButton = this.section.querySelector('.hero-carousel__arrow--prev');
      this.nextButton = this.section.querySelector('.hero-carousel__arrow--next');
      this.playPauseButton = this.section.querySelector('.hero-carousel__play-pause');
      
      this.isPaused = false;
      this.autoplay = this.section.dataset.autoplay === 'true';
      this.autoplaySpeed = parseInt(this.section.dataset.autoplaySpeed, 10);
      this.interval = null;

      this.currentIndex = 0;

      if (this.links.length < 2) return;

      this.prevButton.addEventListener('click', this.prev.bind(this));
      this.nextButton.addEventListener('click', this.next.bind(this));
      this.links.forEach((link, index) => {
        link.addEventListener('mouseover', () => this.goTo(index));
      });
      
      if (this.autoplay) {
        this.playPauseButton.addEventListener('click', this.togglePlayPause.bind(this));
        this.section.addEventListener('mouseenter', () => this.pause());
        this.section.addEventListener('mouseleave', () => this.play());
        this.start();
      } else {
        this.playPauseButton.style.display = 'none';
      }
    }

    goTo(index) {
      if (index === this.currentIndex) return;
      this.restartInterval();
      
      this.links[this.currentIndex].classList.remove('is-active');
      this.images[this.currentIndex].classList.remove('is-active');
      this.contents[this.currentIndex].classList.remove('is-active');

      this.links[index].classList.add('is-active');
      this.images[index].classList.add('is-active');
      this.contents[index].classList.add('is-active');

      this.currentIndex = index;
    }

    next() {
      const newIndex = (this.currentIndex + 1) % this.links.length;
      this.goTo(newIndex);
    }

    prev() {
      const newIndex = (this.currentIndex - 1 + this.links.length) % this.links.length;
      this.goTo(newIndex);
    }
    
    start() {
      this.isPaused = false;
      this.playPauseButton.classList.remove('is-paused');
      this.playPauseButton.setAttribute('aria-label', 'Pause autoplay');
      this.interval = setInterval(() => this.next(), this.autoplaySpeed);
    }
    
    pause() {
      if (this.interval) {
        clearInterval(this.interval);
        this.interval = null;
      }
    }

    play() {
      if (!this.isPaused && !this.interval) {
        this.start();
      }
    }

    togglePlayPause() {
      this.isPaused = !this.isPaused;
      if (this.isPaused) {
        this.pause();
        this.playPauseButton.classList.add('is-paused');
        this.playPauseButton.setAttribute('aria-label', 'Play autoplay');
      } else {
        this.play();
      }
    }
    
    restartInterval() {
      if (this.autoplay && !this.isPaused) {
        this.pause();
        this.play();
      }
    }
  }

  document.addEventListener('DOMContentLoaded', () => {
    const heroCarouselSection = document.getElementById('Hero-{{ section.id }}');
    if (heroCarouselSection) {
      new HeroCarousel(heroCarouselSection);
    }
  });
</script>

{% stylesheet %}
  .hero-carousel-section {
    --section-width: 100vw;
    width: var(--section-width);
    margin-left: calc(50% - 50vw);
    position: relative;
    height: var(--section-height-mobile);
    color: #000;
    overflow: hidden;
  }

  @media screen and (min-width: 768px) {
    .hero-carousel-section {
      height: var(--section-height-desktop);
    }
  }

  .hero-carousel__media-container {
    position: absolute;
    inset: 0;
    z-index: 1;
    background-color: #f0f0f0;
  }
  
  .hero-carousel__media-container::after {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(to right, rgba(255,255,255,0.4) 0%, rgba(255,255,255,0) 60%);
    z-index: 2;
  }

  .hero-carousel__media-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    opacity: 0;
    transition: opacity 0.8s cubic-bezier(0.4, 0, 0.2, 1);
    position: absolute;
    inset: 0;
    z-index: 1;
  }
  
  .hero-carousel__media-image.placeholder-wrapper {
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .hero-carousel__media-image.is-active {
    opacity: 1;
    z-index: 2;
  }

  .hero-carousel__content-container {
    position: relative;
    z-index: 3;
    width: 100%;
    padding: 0 5vw;
    display: flex;
    align-items: center;
    height: 100%;
  }

  .hero-carousel__content-inner {
    max-width: 550px;
    text-align: left;
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 1rem;
    position: absolute;
    opacity: 0;
    transform: translateY(20px);
    transition: opacity 0.6s ease 0.2s, transform 0.6s ease 0.2s;
  }
  
  .hero-carousel__content-inner.is-active {
    opacity: 1;
    transform: translateY(0);
  }

  .hero-carousel__subheading { font-size: 1rem; margin: 0; letter-spacing: 0.05em; }
  .hero-carousel__heading { font-size: clamp(2.5rem, 5vw, 4rem); font-weight: 500; line-height: 1.1; margin: 0; }
  .hero-carousel__text { margin: 0; font-size: 1rem; max-width: 450px; line-height: 1.6; }

  .hero-carousel__button {
    background-color: transparent; border: 1px solid #000; color: #000;
    padding: 12px 28px; text-decoration: none;
    transition: background-color 0.3s, color 0.3s;
    margin-top: 1rem; font-size: 0.9rem;
  }
  .hero-carousel__button:hover { background-color: #000; color: #fff; }

  .hero-carousel__nav-wrapper {
    position: absolute;
    bottom: 3rem;
    left: 0;
    width: 100%;
    z-index: 4;
    display: flex;
    justify-content: flex-end;
    padding: 0 5vw;
    pointer-events: none;
  }

  .hero-carousel__nav {
    display: flex;
    align-items: center;
    gap: 1rem;
    pointer-events: auto;
  }

  .hero-carousel__titles { display: flex; gap: 1.5rem; }
  .hero-carousel__title-link {
    color: #000; text-decoration: none; font-size: 1rem; opacity: 0.6;
    position: relative; transition: opacity 0.3s; padding-bottom: 5px;
  }
  .hero-carousel__title-link:hover, .hero-carousel__title-link.is-active { opacity: 1; }
  .hero-carousel__title-link.is-active::after {
    content: ''; position: absolute; bottom: 0; left: 0;
    width: 100%; height: 1px; background-color: #000;
  }

  .hero-carousel__arrow { width: 12px; height: 12px; }
  .hero-carousel__arrow, .hero-carousel__play-pause {
    background: none; border: none; cursor: pointer; padding: 0.5rem;
    color: #000; opacity: 0.7; transition: opacity 0.3s;
    display: flex; align-items: center; justify-content: center;
    flex-shrink: 0;
  }
  .hero-carousel__arrow:hover, .hero-carousel__play-pause:hover { opacity: 1; }
  .hero-carousel__play-pause { width: 14px; height: 14px; }
  
  .hero-carousel__play-pause .icon-play { display: none; }
  .hero-carousel__play-pause .icon-pause { display: block; }
  .hero-carousel__play-pause.is-paused .icon-play { display: block; }
  .hero-carousel__play-pause.is-paused .icon-pause { display: none; }

  @media screen and (max-width: 768px) {
    .hero-carousel__content-container { padding: 0 1.5rem; align-items: flex-end; }
    .hero-carousel-section { color: #fff; }
    .hero-carousel__media-container::after { background: linear-gradient(to top, rgba(0,0,0,0.6) 0%, rgba(0,0,0,0) 70%); }
    .hero-carousel__content-inner {
      text-align: center; margin: 0 auto; align-items: center;
      position: relative; padding-bottom: 8rem; /* Make space for nav */
    }
    .hero-carousel__button, .hero-carousel__button:hover { border-color: #fff; color: #fff; }
    .hero-carousel__button:hover { background-color: #fff; color: #000; }
    .hero-carousel__nav-wrapper {
      bottom: 1.5rem;
      left: 50%;
      transform: translateX(-50%);
      width: 100%;
      justify-content: center;
      padding: 0 1rem;
    }
    .hero-carousel__nav {
      width: 100%;
      max-width: 400px;
      justify-content: space-between;
      background: rgba(0, 0, 0, 0.2);
      backdrop-filter: blur(5px);
      padding: 0.5rem 1rem;
      border-radius: 50px;
    }
    .hero-carousel__arrow, .hero-carousel__title-link, .hero-carousel__play-pause { color: #fff; }
    .hero-carousel__title-link.is-active::after { background-color: #fff; }
  }
{% endstylesheet %}

{% schema %}
{
  "name": "Hero Carousel",
  "tag": "section",
  "class": "section--full-width",
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "Color Scheme",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "Section Height"
    },
    {
      "type": "range",
      "id": "section_height_desktop",
      "label": "Desktop Height",
      "min": 70,
      "max": 100,
      "step": 5,
      "unit": "vh",
      "default": 90
    },
    {
      "type": "range",
      "id": "section_height_mobile",
      "label": "Mobile Height",
      "min": 70,
      "max": 100,
      "step": 5,
      "unit": "vh",
      "default": 85
    },
    {
      "type": "header",
      "content": "Autoplay"
    },
    {
      "type": "checkbox",
      "id": "autoplay",
      "label": "Enable Autoplay",
      "default": true
    },
    {
      "type": "range",
      "id": "autoplay_speed",
      "label": "Slide Duration",
      "min": 3000,
      "max": 9000,
      "step": 500,
      "unit": "ms",
      "default": 5000
    }
  ],
  "blocks": [
    {
      "type": "collection_slide",
      "name": "Collection Slide",
      "limit": 5,
      "settings": [
        {
          "type": "collection",
          "id": "collection",
          "label": "Collection"
        },
        {
          "type": "image_picker",
          "id": "image",
          "label": "Override Image",
          "info": "Optional. Overrides the collection's featured image."
        },
        {
          "type": "text",
          "id": "subheading",
          "label": "Subheading",
          "default": "Shine Brighter"
        },
        {
          "type": "text",
          "id": "heading",
          "label": "Heading",
          "default": "Where Grace Meets Glamour"
        },
        {
          "type": "text",
          "id": "text",
          "label": "Text",
          "default": "Timeless gold pieces designed to elevate every occasion."
        },
        {
          "type": "text",
          "id": "button_label",
          "label": "Button Label",
          "default": "Explore Gold Collection"
        },
        {
          "type": "url",
          "id": "button_link",
          "label": "Button Link",
          "info": "Optional. Defaults to the collection URL."
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Hero Carousel",
      "blocks": [
        { "type": "collection_slide" },
        { "type": "collection_slide" },
        { "type": "collection_slide" }
      ]
    }
  ]
}
{% endschema %}