

{% comment %}
  STEP 1: Use Liquid to build a complete JSON string.
  We will loop through the list and resolve the nested 'stone' metaobject for each item.
{% endcomment %}

<div class="stone-configurations">
  <h4>Configuration Details:</h4>

  {% comment %}
    Loop through the list and directly print the HTML.
    This is all done in Liquid. No JavaScript needed.
  {% endcomment %}
  {%- for config_item in product.metafields.custom.stone_configuration.value -%}
    
    <div class="config-item" style="border-top: 1px solid #eee; padding-top: 10px; margin-top: 10px;">
      <p><strong>Setting Type:</strong> {{ config_item.setting_type }}</p>
      <p><strong>Stone Count:</strong> {{ config_item.number_of_stone }}</p>

      {%- comment %} Get the nested "Stone" metaobject by adding .value {%- endcomment -%}
      {%- assign stone_metaobject = config_item.stone.value -%}

      {%- if stone_metaobject -%}
        <p><strong>Stone Name:</strong> {{ stone_metaobject.name }}</p>
        <p><strong>Stone Color:</strong> {{ stone_metaobject.color }}</p>
      {%- endif -%}
    </div>

  {%- endfor -%}
</div>


{% comment %}
  STEP 2: Now, pass the complete and resolved JSON string to JavaScript.
{% endcomment %}
<script>
</script>

{% schema %}
{
  "name": "t:names.custom_liquid",
  "tag": null,
  "settings": [
    {
      "type": "liquid",
      "id": "custom_liquid",
      "label": "t:settings.custom_liquid",
      "info": "t:info.custom_liquid"
    }
  ],
  "presets": [
    {
      "name": "t:names.custom_liquid",
      "category": "t:categories.custom"
    }
  ]
}
{% endschema %}