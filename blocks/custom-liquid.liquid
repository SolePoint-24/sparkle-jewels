

{% comment %}
  ============================================================================
  STONE CONFIGURATION TABLES
  - This code loops through a list of metaobjects.
  - For each item in the list, it creates a styled information table.
  ============================================================================
{% endcomment %}

{%- assign stone_configurations = product.metafields.custom.stone_configuration.value -%}

{%- if stone_configurations.count > 0 -%}
  {%- for config_item in stone_configurations -%}
    
    {%- comment -%} Assign the nested stone_details object to its own variable for easier access. {%- endcomment -%}
    {%- assign stone = config_item.stone_details -%}

    <div class="stone-info-wrapper">
     <div class="stone-info-header">
        <h3 class="stone-info-title">{{ stone.type | default: "Stone" | upcase }} INFORMATION</h3>
        <a href="#" class="stone-info-link">Know More</a>
      </div> 

      <table class="stone-info-table">
        <tbody>
          <tr>
            <td>No. Of {{ stone.shape | default: 'Stone' }}</td>
            <td>{{ config_item.number_of_stone }}</td>
          </tr>
          <tr>
            <td>Enhancement</td>
            <td>{{ stone.enhancement | default: "None" }}</td>
          </tr>
          <tr>
            <td>Total Weight (ct. tw.)</td>
            <td>{{ config_item.weight_carat }}</td>
          </tr>
           <tr>
            <td>Stone Size (mm)</td>
            <td>{{ config_item.stone_size }}</td>
          </tr>
          <tr>
            <td>Colour Clarity</td>
            <td>{{ stone.quality_grade }}</td>
          </tr>
          <tr>
            <td>Setting Type</td>
            <td>{{ config_item.setting_type }}</td>
          </tr>
        </tbody>
      </table>
    </div>

  {%- endfor -%}
{%- endif -%}


{% stylesheet %}
  .stone-info-wrapper {
    margin-bottom: 30px; /* Adds space between multiple tables */
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
  }

  .stone-info-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 10px;
  }

  .stone-info-title {
    margin: 0;
    font-size: 1em;
    font-weight: 600;
    letter-spacing: 0.1em;
    color: #333;
  }

  .stone-info-link {
    font-size: 0.9em;
    text-decoration: underline;
    color: #555;
  }
  .stone-info-link:hover {
    color: #000;
  }

  .stone-info-table {
    width: 100%;
    border-collapse: collapse;
    border: 1px solid #e9e9e9;
    border-radius: 4px;
    overflow: hidden;
  }

  .stone-info-table tr {
    border-bottom: 1px solid #e9e9e9;
  }

  .stone-info-table tr:last-child {
    border-bottom: none;
  }

  .stone-info-table tr:nth-child(even) {
    background-color: #f9f9f9;
  }
  
  .stone-info-table td {
    padding: 12px 15px;
    font-size: 0.95em;
    color: #444;
  }
  

  .stone-info-table td:first-child {
    width: 60%;
    background-color: #bbbbbb; 
  }

  .stone-info-table td:last-child {
    font-weight: 500;
    color: #111;
    background-color: #ffffff;
  }
{% endstylesheet %}

{% schema %}
{
  "name": "t:names.custom_liquid",
  "tag": null,
  "settings": [
    {
      "type": "liquid",
      "id": "custom_liquid",
      "label": "t:settings.custom_liquid",
      "info": "t:info.custom_liquid"
    }
  ],
  "presets": [
    {
      "name": "t:names.custom_liquid",
      "category": "t:categories.custom"
    }
  ]
}
{% endschema %}