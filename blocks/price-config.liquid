{% comment %}
  ============================================================================
  BLOCK: Price Config (Final Version)
  ============================================================================
{% endcomment %}

{% comment %}
  ============================================================================
  BLOCK: Price Config (Final Version with Dynamic Stones)
  ============================================================================
{% endcomment %}

{% comment %}
  ============================================================================
  BLOCK: Price Config (Using Direct Reference for Stone Pricing)
  ============================================================================
{% endcomment %}

{%- if block.settings.show_block -%}

  {% comment %}
    We only need the product's metafields now. No need for a global price list.
  {% endcomment %}
  {%- assign metal_weights_list = product.selected_or_first_available_variant.metafields.custom.metal_weights.value -%}
  {%- assign stone_configurations = product.metafields.custom.stone_configuration.value -%}

  {%- assign total_metals_value = 0 -%}
  {%- assign total_stones_value = 0 -%}

  <price-breakdown class="price-config-wrapper" {{ block.shopify_attributes }}>
    <div class="price-breakdown-table">
      <div class="pbt-row pbt-header">
        <div class="pbt-cell">COMPONENT</div>
        <div class="pbt-cell">RATE</div>
        <div class="pbt-cell">WEIGHT</div>
        <div class="pbt-cell pbt-align-right">VALUE</div>
      </div>

      <div class="pbt-row pbt-group-title">
        <div class="pbt-cell">METALS</div>
      </div>

      {% for metal_item in metal_weights_list %}
        {%- assign final_metal_object = metal_item.metal_variant.value -%}
        {% if final_metal_object %}
          {%- assign rate = final_metal_object.pricing | default: 0 -%}
          {%- assign weight = metal_item.metal_weight | default: 0 | times: 1.0 -%}
          {%- assign total_value = rate | times: weight -%}
          {%- assign total_metals_value = total_metals_value | plus: total_value -%}
          
          <div class="pbt-row">
            <div class="pbt-cell"><span class="pbt-main-text">{{ final_metal_object.display_name }}</span></div>
            <div class="pbt-cell">{{ rate | times: 100 | money }}</div>
            <div class="pbt-cell">{{ weight }} g</div>
            <div class="pbt-cell pbt-align-right"><span>{{ total_value | times: 100 | money }}</span></div>
          </div>
        {% endif %}
      {% endfor %}

      <div class="pbt-row pbt-group-title">
        <div class="pbt-cell">STONES</div>
      </div>

      {% for config_item in stone_configurations %}
        {%- assign stone = config_item.stone.value -%}
        {% if stone %}
          {% comment %}
            SIMPLIFIED LOGIC: Get the pricing object directly from the reference.
            Check that 'stone_pricing_reference' is the correct handle for your reference field.
          {% endcomment %}
          {%- assign pricing_object = stone.stone_pricing.value -%}
          {%- assign stone_price_per_carat = pricing_object.pricing | default: 0 -%}

          {%- assign total_weight = config_item.weight_carat | default: "uidveyubvefubefhebveuhbv" | times: 1.0 -%}
          {%- assign total_stone_value_for_item = total_weight | times: stone_price_per_carat -%}
          {%- assign total_stones_value = total_stones_value | plus: total_stone_value_for_item -%}

          <div class="pbt-row">
            <div class="pbt-cell">
              <span class="pbt-main-text">{{ stone.display_name }}</span>
              <span class="pbt-sub-text">x {{ config_item.number_of_stone }} ({{ config_item.stone_size }}mm)</span>
            </div>
            <div class="pbt-cell">{{ stone_price_per_carat | times: 100 | money }}</div>
            <div class="pbt-cell">{{ total_weight }} ct.w</div>
            <div class="pbt-cell pbt-align-right">
              <span>{{ total_stone_value_for_item | times: 100 | money }}</span>
            </div>
          </div>
        {% endif %}
      {% endfor %}
      
      <div class="pbt-row pbt-summary-row">
        <div class="pbt-cell">STONES VALUE</div>
        <div class="pbt-cell">-</div>
        <div class="pbt-cell">-</div>
        <div class="pbt-cell pbt-align-right">
          <span>{{ total_stones_value | times: 100 | money }}</span>
        </div>
      </div>
      
      {%- assign subtotal = total_metals_value | plus: total_stones_value -%}
      
      <div class="pbt-row pbt-summary-row">
        <div class="pbt-cell pbt-bold">SUBTOTAL</div>
        <div class="pbt-cell">-</div>
        <div class="pbt-cell">-</div>
        <div class="pbt-cell pbt-align-right">
          <span>{{ subtotal | times: 100 | money }}</span>
        </div>
      </div>

      <div class="pbt-row pbt-grand-total">
        <div class="pbt-cell">
          <span class="pbt-main-text pbt-bold">GRAND TOTAL</span>
          <span class="pbt-sub-text">(MRP Incl. of all taxes)</span>
        </div>
        <div class="pbt-cell">-</div>
        <div class="pbt-cell">-</div>
        <div class="pbt-cell pbt-align-right pbt-final-price">
          <span>â‚¹29,349</span>
        </div>
      </div>
    </div>
  </price-breakdown>
{%- endif -%}

<script>

</script>

{% stylesheet %}
  .price-config-wrapper {
    margin-bottom: 20px;
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol';
  }

  .price-breakdown-table {
    border: 1px solid #e0e0e0;
    border-radius: 8px;
    overflow: hidden;
  }

  .pbt-row {
    display: flex;
    align-items: center;
    border-bottom: 1px solid #e0e0e0;
    padding: 10px 15px;
    background-color: #fff;
  }

  .pbt-row:last-child {
    border-bottom: none;
  }

  .pbt-cell {
    display: flex;
    flex-direction: column;
    flex-basis: 25%;
    color: #555;
    font-size: 14px;
  }
  
  .pbt-cell:first-child {
    flex-basis: 35%;
  }
  
  .pbt-cell:last-child {
     flex-basis: 20%;
  }

  .pbt-align-right {
    align-items: flex-end;
    text-align: right;
  }

  .pbt-header {
    background-color: #f8f8f8;
    color: #333;
    font-weight: 600;
    font-size: 12px;
    letter-spacing: 0.05em;
    text-transform: uppercase;
  }

  .pbt-group-title {
    background-color: #fdfaf4;
  }

  .pbt-group-title .pbt-cell {
    color: #d4a356;
    font-weight: 600;
    font-size: 13px;
    letter-spacing: 0.05em;
    flex-basis: 100% !important;
  }
  
  .pbt-main-text {
    font-size: 15px;
    color: #222;
  }
  
  .pbt-sub-text {
    font-size: 12px;
    color: #777;
    margin-top: 2px;
  }

  .pbt-strikethrough {
    color: #888;
    text-decoration: line-through;
    font-size: 13px;
  }
  
  .pbt-summary-row .pbt-cell {
     padding-top: 15px;
     padding-bottom: 15px;
  }
  
  .pbt-grand-total {
    background-color: #f8f8f8;
    border-top: 1px solid #e0e0e0;
  }
  
  .pbt-bold {
    font-weight: 600;
  }
  
  .pbt-final-price span {
    font-size: 18px;
    font-weight: 700;
    color: #000;
  }

{% endstylesheet %}

{% schema %}
{
  "name": "Price_Configuration",
  "tag": "div",
  "settings": [
    {
      "type": "header",
      "content": "Block Visibility"
    },
    {
      "type": "checkbox",
      "id": "show_block",
      "label": "Show this block",
      "default": true
    }
  ],
  "presets": [
    {
      "name": "Price_Configuration",
      "category": "t:categories.custom"
    }
  ]
}
{% endschema %}