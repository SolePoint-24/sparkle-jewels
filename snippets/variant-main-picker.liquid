{%- doc -%}
  Renders a default variant picker, used to display the variant picker in the variants block.

  @param {object} product_resource - The product object.
  @param {object} [block] - The block object
{%- enddoc -%}

{% assign block_settings = block.settings %}

{% unless product_resource.has_only_default_variant %}
  {% liquid
    assign button_background_brightness = section.settings.color_scheme.settings.foreground | color_brightness
    if button_background_brightness < 105
      assign strikethrough_color_mix = '#000'
    else
      assign strikethrough_color_mix = '#fff'
    endif
  %}

  <variant-picker
    class="variant-picker spacing-style variant-picker--{{ block_settings.alignment }}"
    style="--color-strikethrough-mix: {{ strikethrough_color_mix }}; {% render 'spacing-style', settings: block_settings %}"
    data-section-id="{{ section.id }}"
    data-product-id="{{ product_resource.id }}"
    data-block-id="{{ block.id }}"
    data-product-url="{{ product_resource.url }}"
    ref="mainVariantPicker"
    {% if product.id == product_resource.id %}
      data-template-product-match="true"
    {% endif %}
    {{ block.shopify_attributes }}
    {% if request.visual_preview_mode %}
      data-shopify-visual-preview
    {% endif %}
  >
    <form class="variant-picker__form">
      {%- for product_option in product_resource.options_with_values -%}
        {%- liquid
          assign swatch_count = product_option.values | map: 'swatch' | compact | size
          assign variant_style = block_settings.variant_style

          if swatch_count > 0 and block_settings.show_swatches
            if block_settings.variant_style == 'dropdown'
              assign variant_style = 'swatch_dropdown'
            else
              assign variant_style = 'swatch'
            endif
          endif

          if variant_style == 'buttons' and settings.variant_button_width == 'equal-width-buttons'
            assign fieldset_id = section.id | append: '-' | append: product_resource.id | append: '-' | append: product_option.name | handleize
            assign option_id_attribute = 'data-option-id="' | append: fieldset_id | append: '"'
            assign longest_value = 0
          endif
        -%}

        {%- if variant_style == 'swatch' or block_settings.variant_style == 'buttons' -%}
          <fieldset
            class="variant-option variant-option--buttons{% if variant_style == 'swatch' %} variant-option--swatches{% else %} variant-option--{{ settings.variant_button_width }}{% endif %}"
            {{ option_id_attribute }}
          >
            <legend>
              {{ product_option.name | escape -}}
              {%- if variant_style == 'swatch' -%}
                <span class="variant-option__swatch-value">{{ product_option.selected_value }}</span>
              {%- endif %}
            </legend>
            {%- for product_option_value in product_option.values -%}
              {% if product_option_value.size > longest_value and option_id_attribute %}
                {% assign longest_value = product_option_value.size %}
              {% endif %}
              <label class="variant-option__button-label{% if variant_style == 'swatch' %} variant-option__button-label--has-swatch{% endif %}">
                <input
                  type="radio"
                  name="{{ product_option.name | escape }}-{{ block.id }}-{{ product_resource.id }}"
                  value="{{ product_option_value | escape }}"
                  aria-label="{{ product_option_value.name }}"
                  {% if product_option_value.available == false %}
                    aria-disabled="true"
                  {% endif %}
                  data-input-id="{{ product_option.position }}-{{ forloop.index0 }}"
                  data-option-value-id="{{ product_option_value.id }}"
                  data-option-available="{{ product_option_value.available }}"
                  data-connected-product-url="{{ product_option_value.product_url }}"
                  {% if product_option_value.variant.id %}
                    data-variant-id="{{ product_option_value.variant.id }}"
                  {% endif %}
                  {% if product_option_value.selected %}
                    checked
                  {% endif %}
                >
                {% if variant_style == 'swatch' %}
                  {% liquid
                    assign featured_media = product_option_value.variant.featured_media

                    if featured_media == blank and product_option_value.product_url
                      assign featured_media = product_option_value.variant.product.featured_media
                    endif
                  %}

                  {% render 'swatch',
                    swatch: product_option_value.swatch,
                    variant_image: featured_media,
                    mode: 'unscaled'
                  %}
                {% else %}
                  <span class="variant-option__button-label__text">{{ product_option_value | escape }}</span>
                {% endif %}
                {% render 'strikethrough-variant', product_option: product_option_value %}
              </label>
            {%- endfor -%}
            {% if option_id_attribute %}
              {% style %}
                [data-option-id="{{ fieldset_id }}"] {
                  --variant-ch: {{ longest_value }}ch;
                }
              {% endstyle %}
            {% endif %}
          </fieldset>

        {%- elsif block_settings.variant_style == 'slider' -%}
          <fieldset class="variant-option variant-option--slider" data-slider-id="{{ product_option.name | handleize }}-{{ block.id }}">
            <legend>{{ product_option.name | escape }}</legend>

            <div class="variant-slider__container">
              <div class="variant-slider__nav variant-slider__nav--prev swiper-button-prev-{{ forloop.index }}">
                <svg aria-hidden="true" focusable="false" viewBox="0 0 24 24">
                  <polyline points="15 18 9 12 15 6"></polyline>
                </svg>
              </div>

              <div class="variant-slider__nav variant-slider__nav--next swiper-button-next-{{ forloop.index }}">
                <svg aria-hidden="true" focusable="false" viewBox="0 0 24 24">
                  <polyline points="9 18 15 12 9 6"></polyline>
                </svg>
              </div>

              <div class="swiper variant-slider-swiper" data-swiper-index="{{ forloop.index }}">
                <div class="swiper-wrapper">
                  {%- for product_option_value in product_option.values -%}
                    {%- liquid
                      assign variant_image_url = ''
                      case product_option_value
                        when '14K Rose Gold'
                          assign variant_image_url = 'https://cdn.shopify.com/s/files/1/0664/9456/2387/files/14K_ROSE_GOLD.png?v=1758711942'
                        when '24K Rose Gold'
                          assign variant_image_url = 'https://cdn.shopify.com/s/files/1/0664/9456/2387/files/24K_ROSE_GOLD.png?v=1758711942'
                        when '18K Rose Gold'
                          assign variant_image_url = 'https://cdn.shopify.com/s/files/1/0664/9456/2387/files/18K_ROSE_GOLD.png?v=1758711943'
                        when '22K Rose Gold'
                          assign variant_image_url = 'https://cdn.shopify.com/s/files/1/0664/9456/2387/files/22K_ROSE_GOLD.png?v=1758711942'
                        when '18K Yellow Gold'
                          assign variant_image_url = 'https://cdn.shopify.com/s/files/1/0664/9456/2387/files/18K_YELLOW_GOLD.png?v=1758711942'
                        when '22K Yellow Gold'
                          assign variant_image_url = 'https://cdn.shopify.com/s/files/1/0664/9456/2387/files/22K_YELLOW_GOLD.png?v=1758711943'
                        when '14K Yellow Gold'
                          assign variant_image_url = 'https://cdn.shopify.com/s/files/1/0664/9456/2387/files/14K_YELLOW_GOLD.png?v=1758711942'
                        when '24K Yellow Gold'
                          assign variant_image_url = 'https://cdn.shopify.com/s/files/1/0664/9456/2387/files/24K_YELLOW_GOLD.png?v=1758711943'
                        when '14K White Gold'
                          assign variant_image_url = 'https://cdn.shopify.com/s/files/1/0664/9456/2387/files/14K_SILVER_GOLD.png?v=1758711942'
                        when '18K White Gold'
                          assign variant_image_url = 'https://cdn.shopify.com/s/files/1/0664/9456/2387/files/18K_SILVER_GOLD.png?v=1758711942'
                        when '24K White Gold'
                          assign variant_image_url = 'https://cdn.shopify.com/s/files/1/0664/9456/2387/files/24K_SILVER_GOLD.png?v=1758711942'
                        when '22K White Gold'
                          assign variant_image_url = 'https://cdn.shopify.com/s/files/1/0664/9456/2387/files/22K_SILVER_GOLD.png?v=1758711942'
                      endcase
                    -%}

                    <div class="swiper-slide">
                      <label class="variant-slider__label">
                        <input
                          type="radio"
                          name="{{ product_option.name | escape }}-{{ block.id }}-{{ product_resource.id }}"
                          value="{{ product_option_value | escape }}"
                          aria-label="{{ product_option_value.name }}"
                          {% if product_option_value.available == false %}
                            aria-disabled="true"
                          {% endif %}
                          data-input-id="{{ product_option.position }}-{{ forloop.index0 }}"
                          data-option-value-id="{{ product_option_value.id }}"
                          data-option-available="{{ product_option_value.available }}"
                          data-connected-product-url="{{ product_option_value.product_url }}"
                          {% if product_option_value.variant.id %}
                            data-variant-id="{{ product_option_value.variant.id }}"
                          {% endif %}
                          {% if product_option_value.selected %}
                            checked
                          {% endif %}
                        >
                        <div class="variant-slider__image-wrapper">
                          <img src="{{ variant_image_url }}" alt="{{ product_option_value | escape }}" loading="lazy" width="60" height="60">
                          <span>{{ product_option_value | escape }}</span>
                        </div>
                      </label>
                    </div>
                  {%- endfor -%}
                </div>
              </div>
            </div>
          </fieldset>

        {%- elsif block_settings.variant_style == 'dropdowns' -%}
          {% liquid
            assign property_being_updated = false
            if settings.variant_swatch_width != settings.variant_swatch_height
              assign property_being_updated = true
              assign new_width = settings.variant_swatch_width | times: 1.0 | divided_by: settings.variant_swatch_height | times: 20
            endif
          %}

          <div class="variant-option variant-option--dropdowns">
            <label for="Option-{{ block.id }}-{{ forloop.index0 }}">{{ product_option.name | escape }}</label>
            <div
              class="variant-option__select-wrapper"
              style="
                {%- if property_being_updated  -%}
                  --variant-picker-swatch-width: clamp(10px,{{ new_width }}px, 50px);
                {%- endif -%}
              "
            >
              <select
                id="Option-{{ block.id }}-{{ forloop.index0 }}"
                name="options[{{ product_option.name | escape }}]"
                class="variant-option__select"
              >
                {%- for product_option_value in product_option.values -%}
                  <option
                    value="{{ product_option_value | escape }}"
                    data-input-id="{{ product_option.position }}-{{ forloop.index0 }}"
                    data-option-value-id="{{ product_option_value.id }}"
                    data-variant-id="{{ product_option_value.variant.id }}"
                    data-connected-product-url="{{ product_option_value.product_url }}"
                    {% if product_option_value.selected %}
                      selected="selected"
                    {% endif %}
                  >
                    {% if product_option_value.available == false %}
                      {{ product_option_value | escape }} - {{ 'content.unavailable' | t }}
                    {% else %}
                      {{ product_option_value | escape }}
                    {% endif %}
                  </option>
                {%- endfor -%}
              </select>
              <svg
                aria-hidden="true"
                focusable="false"
                class="icon icon-caret"
                viewBox="0 0 10 6"
              >
                {%- render 'icon', icon: 'caret' -%}
              </svg>
            </div>
          </div>
        {%- endif -%}
      {%- endfor -%}

      <script type="application/json">
        {{ product_resource.selected_or_first_available_variant | json }}
      </script>
    </form>
  </variant-picker>
{% endunless %}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/Swiper/11.0.5/swiper-bundle.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/Swiper/11.0.5/swiper-bundle.min.js" defer></script>

<script>
  // Global object to hold Swiper instances
  let swiperInstances = {};

  function initVariantSliders() {
    // Clean up old instances before re-initializing
    Object.values(swiperInstances).forEach(swiper => {
      if (swiper && !swiper.destroyed) {
        swiper.destroy(true, true);
      }
    });
    swiperInstances = {};

    const sliders = document.querySelectorAll('.variant-slider-swiper');

    sliders.forEach(slider => {
      const swiperIndex = slider.dataset.swiperIndex;
      
      swiperInstances[swiperIndex] = new Swiper(slider, {
        slidesPerView: 2,
        spaceBetween: 12,
        breakpoints: {
          480: { slidesPerView: 3, spaceBetween: 12 },
          768: { slidesPerView: 2, spaceBetween: 12 },
          1024: { slidesPerView: 4, spaceBetween: 15 }
        },
        navigation: {
          nextEl: `.swiper-button-next-${swiperIndex}`,
          prevEl: `.swiper-button-prev-${swiperIndex}`,
        },
        keyboard: { enabled: true },
        grabCursor: true,
        loop: false,
        // Ensure that slides are not centered to allow proper end-of-list alignment
        centeredSlides: false,
        // Handle navigation state on events
        on: {
          init: function(swiper) {
            updateNavigationState(swiper, swiperIndex);
            restoreCarouselPosition(swiper, swiperIndex); // Restore position on init
          },
          slideChange: function(swiper) {
            updateNavigationState(swiper, swiperIndex);
          },
          resize: function(swiper) {
            updateNavigationState(swiper, swiperIndex);
          }
        }
      });
    });

    handleVariantSelection();
  }

  function updateNavigationState(swiper, swiperIndex) {
    const prevBtn = document.querySelector(`.swiper-button-prev-${swiperIndex}`);
    const nextBtn = document.querySelector(`.swiper-button-next-${swiperIndex}`);
    
    if (prevBtn && nextBtn) {
      // Use Swiper's internal state properties for reliability
      const isBeginning = swiper.isBeginning;
      const isEnd = swiper.isEnd;

      prevBtn.classList.toggle('swiper-button-disabled', isBeginning);
      nextBtn.classList.toggle('swiper-button-disabled', isEnd);
      
      prevBtn.setAttribute('aria-disabled', isBeginning);
      nextBtn.setAttribute('aria-disabled', isEnd);
    }
  }

  function handleVariantSelection() {
    const variantInputs = document.querySelectorAll('.variant-option--slider input[type="radio"]');
    
    variantInputs.forEach(input => {
      // Use a 'click' listener as 'change' can sometimes behave inconsistently on page reloads
      input.addEventListener('click', function() {
        const slide = this.closest('.swiper-slide');
        const swiperContainer = slide.closest('.swiper');
        const swiperIndex = swiperContainer.dataset.swiperIndex;
        
        if (slide) {
          const slideIndex = Array.from(slide.parentElement.children).indexOf(slide);
          // Store the intended slide index before the page reloads
          sessionStorage.setItem(`variant-slider-${swiperIndex}`, slideIndex);
        }
      });
    });
  }
  
  function restoreCarouselPosition(swiper, swiperIndex) {
    const storedPosition = sessionStorage.getItem(`variant-slider-${swiperIndex}`);
    
    if (storedPosition && swiper && !swiper.destroyed) {
      const slideIndex = parseInt(storedPosition, 10);
      if (!isNaN(slideIndex) && slideIndex < swiper.slides.length) {
        // Slide to the selected variant without animation (immediate)
        swiper.slideTo(slideIndex, 0);
        swiper.update(); 
      }
    }
  }

  // Run initialization on initial page load
  document.addEventListener('DOMContentLoaded', initVariantSliders);
  
  // Also run initialization when a section is loaded or reloaded in the Shopify Theme Editor
  document.addEventListener('shopify:section:load', initVariantSliders);

  // Clean up on page unload
  window.addEventListener('beforeunload', function() {
    Object.values(swiperInstances).forEach(swiper => {
      if (swiper && !swiper.destroyed) {
        swiper.destroy(true, true);
      }
    });
  });
</script>
{% stylesheet %}
  /* ======== START: CORRECTED CSS ======== */
  .variant-picker {
    width: 100%;
    max-width: 100%;
    overflow: hidden; /* CHANGED: Was 'hidden', caused nav buttons to be clipped */
    box-sizing: border-box;
  }
  /* ======== END: CORRECTED CSS ======== */

  .variant-picker * {
    box-sizing: border-box;
  }
  
  .variant-picker__form {
    display: flex;
    flex-direction: column;
    gap: var(--padding-lg);
    width: 100%;
  }

  /* --- SWIPER SLIDER STYLES --- */
  .variant-option--slider {
    padding: 0;
    margin: 0;
    border: none;
  }
  
  .variant-option--slider legend {
    padding: 0;
    margin-block-end: var(--margin-xs);
    font-weight: 600;
  }

  .variant-slider__container {
    position: relative;
    max-width: 100%;
    margin: 0 auto;
    /* overflow is handled by variant-picker now */
    box-sizing: border-box;
    padding: 0 40px; /* Space for navigation buttons */
  }

  .variant-slider-swiper {
    padding: 5px 0;
    margin: 0;
    box-sizing: border-box;
    overflow: hidden; /* This is correct for the swiper-container itself */
  }

  @media (max-width: 768px) {
    .variant-slider__container {
      padding: 0 40px;
      max-width: 450px;
    }
  }

  @media (max-width: 480px) {
    .variant-slider__container {
      padding: 0 40px;
      max-width: 400px;
    }
  }

  .swiper-slide {
    height: auto;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .variant-slider__label {
    display: block;
    cursor: pointer;
    width: 100%;
  }

  .variant-slider__image-wrapper {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 8px;
    padding: 8px;
    border: 2px solid transparent;
    border-radius: 8px;
    transition: all 0.2s ease-in-out;
    background: var(--color-background);
  }

  .variant-slider__image-wrapper:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(0,0,0,0.1);
  }

  .variant-slider__image-wrapper img {
    border-radius: 50%;
    width: 60px;
    height: 60px;
    object-fit: cover;
    border: 1px solid rgb(var(--color-foreground-rgb) / 0.12);
  }
  
  .variant-slider__label span {
    font-size: 12px;
    text-align: center;
    color: rgb(var(--color-foreground-rgb) / 0.75);
    display: block;
    width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }

  .variant-slider__label input {
    position: absolute;
    opacity: 0;
    width: 0;
    height: 0;
  }
  
  .variant-slider__label input:checked + .variant-slider__image-wrapper {
    border-color: rgb(var(--color-foreground-rgb));
    background: rgb(var(--color-foreground-rgb) / 0.05);
  }

  .variant-slider__label input:checked + .variant-slider__image-wrapper span {
    color: rgb(var(--color-foreground-rgb));
    font-weight: 600;
  }

  .variant-slider__label input:focus-visible + .variant-slider__image-wrapper {
    box-shadow: 0 0 0 2px var(--color-background), 0 0 0 4px var(--color-foreground);
  }
  
  /* Custom Navigation Buttons */
  .variant-slider__nav {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 32px;
    height: 32px;
    background-color: var(--color-background);
    border: 1px solid rgb(var(--color-foreground-rgb) / 0.12);
    border-radius: 50%;
    box-shadow: 0 2px 8px rgba(0,0,0,0.08);
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.2s ease;
    z-index: 10;
    padding: 0;
  }

  .variant-slider__nav:hover:not(.swiper-button-disabled) {
    background-color: rgb(var(--color-foreground-rgb));
    border-color: rgb(var(--color-foreground-rgb));
    transform: translateY(-50%) scale(1.1);
  }

  .variant-slider__nav:hover:not(.swiper-button-disabled) svg {
    stroke: var(--color-background);
  }

  .variant-slider__nav.swiper-button-disabled {
    opacity: 0.3;
    cursor: not-allowed;
  }

  .variant-slider__nav--prev {
    left: 0;
  }

  .variant-slider__nav--next {
    right: 0;
  }

  .variant-slider__nav svg {
    width: 16px;
    height: 16px;
    stroke: rgb(var(--color-foreground-rgb));
    stroke-width: 2;
    fill: none;
    stroke-linecap: round;
    stroke-linejoin: round;
  }

  /* Unavailable state */
  .variant-slider__label input[aria-disabled="true"] + .variant-slider__image-wrapper {
    opacity: 0.5;
    position: relative;
  }

  .variant-slider__label input[aria-disabled="true"] + .variant-slider__image-wrapper::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 10%;
    right: 10%;
    height: 2px;
    background: rgb(var(--color-foreground-rgb) / 0.3);
    transform: rotate(-45deg);
  }

  /* Hide default Swiper navigation */
  .swiper-button-next,
  .swiper-button-prev {
    display: none !important;
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .variant-slider__nav {
      width: 28px;
      height: 28px;
    }
    
    .variant-slider__nav svg {
      width: 14px;
      height: 14px;
    }
  }

  @media (max-width: 480px) {
    .variant-slider__nav {
      width: 24px;
      height: 24px;
    }
    
    .variant-slider__nav svg {
      width: 12px;
      height: 12px;
    }
  }

  /* Rest of the existing styles remain the same */
  /* ... (your other button, dropdown, swatch styles are fine) ... */
   .variant-option--swatches {
    --options-border-radius: var(--variant-picker-swatch-radius);
    width: 100%;
  }

  .variant-option--swatches-disabled {
    pointer-events: none;
    cursor: not-allowed;
  }

  .variant-option--swatches > overflow-list {
    justify-content: var(--product-swatches-alignment);

    @media (max-width: 749px) {
      justify-content: var(--product-swatches-alignment-mobile);
    }
  }

  .variant-option--buttons {
    display: flex;
    flex-wrap: wrap;
    gap: var(--gap-sm);
    margin: 0;
    padding: 0;
    border: none;
  }

  .variant-option--buttons legend {
    padding: 0;
    margin-block-end: var(--margin-xs);
  }

  .variant-option__swatch-value {
    padding-inline-start: var(--padding-xs);
    color: rgb(var(--color-foreground-rgb) / var(--opacity-70));
  }

  .variant-option__button-label {
    --variant-picker-stroke-color: var(--color-variant-border);

    display: flex;
    flex: 0 0 calc(3ch + 1.3em);
    align-items: center;
    position: relative;
    padding-block: var(--padding-sm);
    padding-inline: var(--padding-lg);
    border: var(--style-border-width) solid var(--color-variant-border);
    border-radius: var(--options-border-radius);
    border-width: var(--options-border-width);
    overflow: clip;
    justify-content: center;
    min-height: calc(3ch + 1.3em);
    min-width: fit-content;
    white-space: nowrap;
    background-color: var(--color-variant-background);
    color: var(--color-variant-text);
    transition: background-color var(--animation-speed) var(--animation-easing),
      border-color var(--animation-speed) var(--animation-easing);

    &:hover {
      background-color: var(--color-variant-hover-background);
      border-color: var(--color-variant-hover-border);
      color: var(--color-variant-hover-text);
    }

    @media screen and (min-width: 750px) {
      padding: var(--padding-xs) var(--variant-option-padding-inline);
    }
  }

  .variant-option__button-label__text {
    text-align: left;
    text-wrap: auto;
  }

  .variant-option--equal-width-buttons {
    --variant-min-width: clamp(44px, calc(var(--variant-option-padding-inline) * 2 + var(--variant-ch)), 100%);

    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(var(--variant-min-width), 1fr));

    .variant-option__button-label {
      min-width: var(--variant-min-width);
    }

    .variant-option__button-label__text {
      text-align: center;
      text-wrap: balance;
    }
  }

  .variant-option__button-label:has(:focus-visible) {
    --variant-picker-stroke-color: var(--color-foreground);

    border-color: var(--color-foreground);
    outline: var(--focus-outline-width) solid var(--color-foreground);
    outline-offset: var(--focus-outline-offset);
  }

  .variant-option__button-label--has-swatch {
    --focus-outline-radius: var(--variant-picker-swatch-radius);

    padding: 0;
    border: none;
    display: block;
    flex-basis: auto;
    min-height: auto;
  }

  .variant-option__button-label:has(:checked) {
    color: var(--color-selected-variant-text);
    background-color: var(--color-selected-variant-background);
    border-color: var(--color-selected-variant-border);
    transition: background-color var(--animation-speed) var(--animation-easing),
      border-color var(--animation-speed) var(--animation-easing);

    &:hover {
      background-color: var(--color-selected-variant-hover-background);
      border-color: var(--color-selected-variant-hover-border);
      color: var(--color-selected-variant-hover-text);
    }
  }

  .variant-option__button-label:has([data-option-available='false']) {
    color: rgb(var(--color-variant-text-rgb) / var(--opacity-60));
  }

  .facets__inputs-list--swatches-grid .variant-option__button-label--has-swatch:hover .swatch {
    --focus-outline: var(--focus-outline-width) solid rgb(var(--color-foreground-rgb) / var(--opacity-35-55));

    outline: var(--focus-outline);
    outline-offset: var(--focus-outline-offset);
  }

  .facets__inputs-list--swatches-grid .variant-option__button-label:has(:focus-visible) .swatch {
    --focus-outline: var(--focus-outline-width) solid currentcolor;

    outline: var(--focus-outline);
    outline-offset: var(--focus-outline-offset);
  }

  .facets__inputs-list--swatches-grid .variant-option__button-label:has(:focus-visible) {
    outline: none;
  }

  .facets__inputs-list--swatches-grid .variant-option__button-label--has-swatch:hover {
    outline: none;
  }

  .variant-option__button-label--has-swatch:hover {
    outline: var(--focus-outline-width) solid rgb(var(--color-foreground-rgb) / var(--opacity-35-55));
    outline-offset: var(--focus-outline-offset);
  }

  .facets__inputs-list--swatches-grid .variant-option__button-label--has-swatch:has(:checked) {
    --focus-outline: none;
  }

  .facets__inputs-list--swatches-grid .variant-option__button-label--has-swatch:has(:checked) .swatch {
    outline: var(--focus-outline);
    outline-offset: var(--focus-outline-offset);
  }

  .variant-option__button-label--has-swatch:has(:checked) {
    --focus-outline: var(--focus-outline-width) solid var(--color-foreground);

    outline: var(--focus-outline);
    outline-offset: var(--focus-outline-offset);
  }

  /* This triggers iOS < 16.4. The outline bug is not recognized as a lack of @supports */
  @supports not (background-color: rgb(from red 150 g b / alpha)) {
    /** There is a bug in safari < 16.4 that causes the outline to not follow the elements border radius. This is a workaround. **/
    .variant-option__button-label--has-swatch:has(:checked),
    .variant-option__button-label:has(:focus-visible) .swatch,
    .facets__inputs-list--swatches-grid .variant-option__button-label--has-swatch:hover .swatch {
      outline: none;
      position: relative;
      overflow: visible;
    }

    .variant-option__button-label--has-swatch:has(:checked)::after,
    .variant-option__button-label:has(:focus-visible) .swatch::after,
    .facets__inputs-list--swatches-grid .variant-option__button-label--has-swatch:hover .swatch::after {
      content: '';
      position: absolute;
      inset: calc(-1 * var(--focus-outline-offset));
      border: var(--focus-outline);
      border-radius: var(--focus-outline-radius, 50%);
      background-color: transparent;
      display: inherit;
    }
  }

  .variant-option__button-label:has([data-option-available='false']):has(:checked) {
    --variant-picker-stroke-color: rgb(var(--color-variant-text-rgb) / var(--opacity-60));

    background-color: inherit;
    color: rgb(var(--color-variant-text-rgb) / var(--opacity-60));
    border-color: var(--color-selected-variant-border);
  }

  .variant-option__button-label input,
  .variant-option--images input {
    /* remove the checkbox from the page flow */
    position: absolute;

    /* set the dimensions to match those of the label */
    inset: 0;

    /* hide it */
    opacity: 0;
    margin: 0;
    cursor: pointer;
    width: 100%;
    height: 100%;
  }

  .variant-option__button-label svg {
    position: absolute;
    top: 0;
    left: 0;
    cursor: pointer;
    pointer-events: none;
    stroke-width: var(--style-border-width);
    stroke: var(--variant-picker-stroke-color);
  }

  .variant-option__select-wrapper {
    display: flex;
    position: relative;
    border: var(--style-border-width-inputs) solid var(--color-border);
    border-radius: var(--style-border-radius-inputs);
    align-items: center;
    margin-top: var(--margin-2xs);
    overflow: clip;
    transition: background-color var(--animation-speed) var(--animation-easing),
      border-color var(--animation-speed) var(--animation-easing);
  }

  .variant-option__select-wrapper:has(.swatch) {
    --variant-picker-swatch-width: 20px;
    --variant-picker-swatch-height: 20px;
  }

  .variant-option__select-wrapper:hover {
    border-color: var(--color-variant-hover-border);
  }

  .variant-option__select:focus-visible {
    outline: var(--focus-outline-width) solid currentcolor;
    outline-offset: var(--focus-outline-offset);
  }

  .variant-option__select {
    padding-block: var(--padding-md);
    padding-inline: var(--padding-lg) calc(var(--padding-lg) + var(--icon-size-2xs));
    appearance: none;
    border: 0;
    width: 100%;
    margin: 0;
    cursor: pointer;
  }

  .variant-option__select-wrapper .icon {
    position: absolute;
    right: var(--padding-md);
    top: 50%;
    transform: translateY(-50%);
    width: var(--icon-size-2xs);
    height: var(--icon-size-2xs);
    pointer-events: none;
  }

  .variant-option__select--has-swatch {
    padding-inline-start: calc((2 * var(--padding-sm)) + var(--variant-picker-swatch-width));
  }

  .variant-option__select-wrapper .swatch {
    position: absolute;
    top: 50%;
    left: var(--padding-md);
    transform: translateY(-50%);
  }

  .variant-picker--center,
  .variant-picker--center .variant-option {
    text-align: center;
    align-items: center;
    justify-content: center;
    width: 100%;
  }

  .variant-picker--right,
  .variant-picker--right .variant-option {
    text-align: right;
    justify-content: right;
  }

  .variant-picker[data-shopify-visual-preview] {
    min-width: 300px;
    padding-inline-start: max(4px, var(--padding-inline-start));
  }

  .variant-option {
    --options-border-radius: var(--variant-picker-button-radius);
    --options-border-width: var(--variant-picker-button-border-width);
    --variant-option-padding-inline: var(--padding-md);
  }
{% endstylesheet %}